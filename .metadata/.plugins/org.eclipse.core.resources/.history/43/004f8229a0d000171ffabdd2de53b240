package jogo;

import java.awt.Graphics2D;
import java.awt.Image;

import br.senai.sc.engine.Utils;

public class Personagem extends ObjetoVivo{
	private boolean gravidade;
	private int movendo; 
	private boolean pulando;
	private boolean eraEsquerda;
	private boolean dandoSoco;
	private boolean indoPraEsquerda;
	private boolean indoPraDireita;
//	private int contadorSoco;

	public Personagem() {
	super(Utils.getInstance().getWidth()/2, 520, 167, 180, 0, 10, Utils.getInstance().loadImage("imagens/personagem.png"), 0, 0, 4, 5, 5);
	}

	@Override
	public void update() {
		if (movendo != 0) {
			setFrameX(getFrameX() + 1);
			if (getFrameX() == getColunas()) {
				setFrameX(0);
			}
		}
		if (movendo == 1) {
			if (!isColidindoComCaixaDireita()) {
				setPosX(getPosX() + getVelX()); 
			}
		} else if (movendo == -1) {
			if (!isColidindoComCaixaEsquerda()) {
				setPosX(getPosX() + getVelX());
			}
		}
		if (dandoSoco) {
			darSoco();
		}
	}
	
	public void darSoco() {
		if(!dandoSoco) {
			dandoSoco = true;
			setFrameX(0);
			if(eraEsquerda) {
				setFrameY(1);
			} else {
				setFrameY(2);
			}
		} else {
			setFrameX(1);
			dandoSoco = false;
//			contadorSoco++;
//			if (contadorSoco == 2) {
//				contadorSoco = 0;
//			}
		}
	}
	
	public boolean isColidindoComCaixaDireita() {
		return (getPosX() + getWidth() >= 3 * (Utils.getInstance().getWidth() / 4));
	}
	public boolean isColidindoComCaixaEsquerda() {
		return (getPosX() <= Utils.getInstance().getWidth() / 4);
	}
	
	public boolean isColidindoComCaixa() {
		return isColidindoComCaixaDireita() || isColidindoComCaixaEsquerda();
	}
	
	public boolean colidindoComChao(Chao chao) {
		// TODO realizar verificação com qualquer tipo de chão
		return false;		
	}

	public void setMovendo(int movendo) {
		if (movendo != this.movendo) {
			if (movendo == 0) {
				setFrameY(0);
				if (this.movendo == 1) {
					setFrameX(0);
					eraEsquerda = true;
				} else {
					setFrameX(1);
					eraEsquerda = false;
				}
			} else if (movendo == 1) {
				setFrameY(3);
				setVelX(Math.abs(getVelX()));
			} else {
				setFrameY(4);
				setVelX(Math.abs(getVelX())*-1);
			}
			this.movendo = movendo;
		}
	}

	public boolean isPulando() {
		return pulando;
	}

	public void setPulando(boolean pulando) {
		this.pulando = pulando;
	}

	public boolean isEraEsquerda() {
		return eraEsquerda;
	}

	public void setWasLeft(boolean wasLeft) {
		this.eraEsquerda = wasLeft;
	}

	public boolean isIndoPraEsquerda() {
		return indoPraEsquerda;
	}

	public void setIndoPraEsquerda(boolean indoPraEsquerda) {
		this.indoPraEsquerda = indoPraEsquerda;
	}

	public boolean isIndoPraDireita() {
		return indoPraDireita;
	}

	public void setIndoPraDireita(boolean indoPraDireita) {
		this.indoPraDireita = indoPraDireita;
	}
	
	
}